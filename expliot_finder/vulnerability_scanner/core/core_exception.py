"""All core 'vulnerability_scanner' modules inherit from 'CoreModulesException'
to create own custom exceptions, without worrying about whether the exceptions
are created will match the appearance of the exceptions in the other core
modules.
"""

__all__ = "CoreModuleException",

from inspect import cleandoc

from .const import RED, END


class CoreModuleException(Exception):
    """Base exception parent class for all core 'vulnerability_scanner' modules

    Format the exception appearance so that they are all in the same style.

    Attributes:
        error_msg:
            Exception message passed by the child exception class.
    """

    def __init__(self, error_msg: str) -> None:
        super().__init__()
        self.error_msg: str = error_msg

    def __str__(self) -> str:
        return cleandoc(f"""
            \n{RED}{46 * '-'} ERROR! {46 * '-'}\n{self.error_msg}\n{100 * '-'}{END}"""
                       )
