"""Data classes where the 'tcp_port_scanner' module will store the detected ports and services.

In these date class 'tcp_port_scan' module will save the following confidential
information about the target:
    - open ports (open ports numbers)
    - services names (running service on these open ports)
    - services versions (versions on those running services)
"""

__all__ = (
    "OpenPort",
    "Service",
)

from dataclasses import dataclass
from typing import Iterator, Optional


@dataclass(kw_only=True, slots=True)
class OpenPort:
    """Store detected open ports numbers in the chosen target.

    Attributes:
        number:
            The detected open port number in the chosen target.
    """

    number: Optional[int] = 0

    def __iter__(self) -> Iterator[tuple[str, int]]:
        """Allow transforming dataclass into dict."""
        if self.number:
            yield "port_number", self.number


@dataclass(kw_only=True, slots=True)
class Service:
    """Store detected running service and version of this service in the chosen target.

    Attributes:
        name:
            The detected running service in the chosen target.
        version:
            The detected version of running service in the chosen target.
    """

    name: Optional[str] = "Unknown"
    version: Optional[str] = "Unknown"

    def __iter__(self) -> Iterator[tuple[str, str]]:
        """Allow transforming dataclass into dict."""
        if self.name:
            yield "service_name", self.name
        if self.version:
            yield "service_version", self.version
